name: Auto Retry Merges for UNKNOWN PRs

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'  # Runs every hour

jobs:
  retry-unknown-prs:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Set Git User Identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Retry 'UNKNOWN' state PRs by re-triggering status checks
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_list=$(gh pr list --state open --label "dependencies" --json number,mergeable -q '.[].number')
          echo "PR list with dependencies: $pr_list"
          
          for pr_number in $pr_list; do
            mergeable_status=$(gh pr view $pr_number --json mergeable -q '.mergeable')

            if [[ "$mergeable_status" == "CONFLICT" ]]; then
                echo "PR #$pr_number has conflicts. Skipping merge attempt."
            elif [[ "$mergeable_status" == "UNKNOWN" ]]; then
                echo "PR #$pr_number is in 'UNKNOWN' state. Re-triggering status checks..."
                gh pr comment $pr_number --body "Re-triggering status checks for PR #$pr_number."
                gh pr checkout $pr_number
                git commit --allow-empty -m "Triggering status recheck for PR #$pr_number"
                git push origin HEAD

                echo "Waiting for status checks to complete..."
                # Poll status checks completion (example)
                status_checks_complete=false
                while [ "$status_checks_complete" != "true" ]; do
                    status_checks_complete=$(gh pr view $pr_number --json status -q '.status == "success"')
                    if [ "$status_checks_complete" != "true" ]; then
                        echo "Waiting for status checks..."
                        sleep 10
                    fi
                done

                echo "Attempting to auto-merge PR #$pr_number..."
                if ! gh pr merge $pr_number --merge --auto --delete-branch; then
                  echo "Failed to merge PR #$pr_number despite re-triggering status checks."
                else
                  echo "Successfully merged PR #$pr_number."
                fi
            else
                echo "PR #$pr_number is in a valid state. Attempting to auto-merge..."
                if ! gh pr merge $pr_number --merge --auto --delete-branch; then
                  echo "Failed to merge PR #$pr_number."
                else
                  echo "Successfully merged PR #$pr_number."
                fi
            fi
          done
